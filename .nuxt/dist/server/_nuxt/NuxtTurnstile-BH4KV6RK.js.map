{"version":3,"file":"NuxtTurnstile-BH4KV6RK.js","sources":["../../../../node_modules/@nuxtjs/turnstile/dist/runtime/components/NuxtTurnstile.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport type { TurnstileRenderOptions } from '../types'\n\nimport { nextTick, useRuntimeConfig, useNuxtApp, ref, onMounted, onBeforeUnmount } from '#imports'\n\nconst props = defineProps({\n\n  modelValue: {\n    type: String,\n    required: false,\n  },\n  element: {\n    type: String,\n    default: 'div',\n  },\n\n  siteKey: {\n    type: String,\n    required: false,\n  },\n  options: {\n    type: Object as () => Omit<TurnstileRenderOptions, 'callback'>,\n    default: () => ({}),\n  },\n  resetInterval: {\n    type: Number,\n    default: 1000 * 250,\n  },\n})\n\nconst emit = defineEmits<{\n  (name: 'update:modelValue', token: string): void\n}>()\n\nconst config = useRuntimeConfig().public.turnstile\nconst nuxtApp = useNuxtApp()\n\nconst el = ref()\nconst unmountStarted = ref(false)\nlet id: string | undefined = undefined\nlet interval: NodeJS.Timeout\n\nconst reset = () => {\n  if (id) {\n    nuxtApp.$turnstile.reset(id)\n  }\n}\nconst unmount = () => {\n  unmountStarted.value = true\n  clearInterval(interval)\n\n  if (id) {\n    nuxtApp.$turnstile.remove(id)\n  }\n}\n\nonMounted(async () => {\n  await nextTick() // TODO: remove once upstream vue bug is fixed (https://github.com/vuejs/core/issues/5844, https://github.com/nuxt/nuxt/issues/13471)\n\n  id = await nuxtApp.$turnstile.render(el.value, {\n    sitekey: props.siteKey || config.siteKey,\n    ...props.options,\n    callback: (token: string) => emit('update:modelValue', token),\n  })\n  interval = setInterval(reset, props.resetInterval)\n\n  if (unmountStarted.value) {\n    unmount()\n  }\n})\n\nonBeforeUnmount(unmount)\n\n// This means we will have CF script server-rendered in our HTML\nif (import.meta.server) {\n  nuxtApp.$turnstile.loadTurnstile()\n}\n\ndefineExpose({ reset })\n</script>\n\n<template>\n  <component\n    :is=\"element\"\n    ref=\"el\"\n  />\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCe,qBAAiB,EAAE,OAAO;AACzC,UAAM,UAAU;AAEhB,UAAM,KAAK;AACY,QAAI,KAAK;AAIhC,UAAM,QAAQ,MAAM;AAAA,IAGlB;AA6BsB;AACtB,cAAQ,WAAW;IACrB;AAEa,aAAA,EAAE,OAAO;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}