{"version":3,"file":"_slug_-CMop9oTx.js","sources":["../../../../node_modules/@nuxtjs/mdc/dist/runtime/parser/toc.mjs","../../../../pages/blog/[slug].vue"],"sourcesContent":["import { flattenNode, flattenNodeText } from \"../utils/ast.mjs\";\nconst TOC_TAGS = [\"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];\nconst TOC_TAGS_DEPTH = TOC_TAGS.reduce((tags, tag) => {\n  tags[tag] = Number(tag.charAt(tag.length - 1));\n  return tags;\n}, {});\nconst getHeaderDepth = (node) => TOC_TAGS_DEPTH[node.tag];\nconst getTocTags = (depth) => {\n  if (depth < 1 || depth > 5) {\n    console.log(`\\`toc.depth\\` is set to ${depth}. It should be a number between 1 and 5. `);\n    depth = 1;\n  }\n  return TOC_TAGS.slice(0, depth);\n};\nfunction nestHeaders(headers) {\n  if (headers.length <= 1) {\n    return headers;\n  }\n  const toc = [];\n  let parent;\n  headers.forEach((header) => {\n    if (!parent || header.depth <= parent.depth) {\n      header.children = [];\n      parent = header;\n      toc.push(header);\n    } else {\n      parent.children.push(header);\n    }\n  });\n  toc.forEach((header) => {\n    if (header.children?.length) {\n      header.children = nestHeaders(header.children);\n    } else {\n      delete header.children;\n    }\n  });\n  return toc;\n}\nexport function generateFlatToc(body, options) {\n  const { searchDepth, depth, title = \"\" } = options;\n  const tags = getTocTags(depth);\n  const headers = flattenNode(body, searchDepth).filter((node) => tags.includes(node.tag || \"\"));\n  const links = headers.map((node) => ({\n    id: node.props?.id,\n    depth: getHeaderDepth(node),\n    text: flattenNodeText(node)\n  }));\n  return {\n    title,\n    searchDepth,\n    depth,\n    links\n  };\n}\nexport function generateToc(body, options) {\n  const toc = generateFlatToc(body, options);\n  toc.links = nestHeaders(toc.links);\n  return toc;\n}\n","<template>\n  <div>\n\n    <h1 class=\"text-4xl font-semibold mb-1 p-3\">ðŸ“– {{ post.title }}</h1>\n    <span class=\"font-light p-3\">ðŸ“… {{ new Date(post.createdAt).toDateString() }}</span>\n\n    <div class=\"p-5\">\n      <div class=\"prose lg:prose-lg xl:prose-xl\">\n        <ContentRendererMarkdown :value=\"parsedMarkdown\" v-bind=\"$attrs\" />\n      </div>\n    </div>\n\n\n    <div class=\"mt-5\">\n      <!-- social media shareer -->\n      <div class=\"flex justify-center\">\n        <b class=\"text-lg m-3 hidden md:block\">ðŸŒ± Share :</b>\n\n        <a :href=\"'https://twitter.com/intent/tweet?text=' + post.title + '&url=' + url + ''\"\n          class=\"bg-gray-800 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded-lg\">\n          <i class=\"mdi mdi-twitter\"></i>\n        </a>\n        <a :href=\"'https://www.facebook.com/sharer/sharer.php?u=' + url + ''\"\n          class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg ml-2\">\n          <i class=\"mdi mdi-facebook\"></i>\n        </a>\n        <a :href=\"'https://www.linkedin.com/shareArticle?mini=true&url=' + url + '&title=' + post.title + ''\"\n          class=\"bg-blue-700 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-lg ml-2\">\n          <i class=\"mdi mdi-linkedin\"></i>\n        </a>\n        <a :href=\"'https://wa.me/?text=' + url + ''\"\n          class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-lg ml-2\">\n          <i class=\"mdi mdi-whatsapp\"></i>\n        </a>\n        <!-- share ig story -->\n        <a href=\"#\" @click=\"shareIgStory\"\n          class=\"bg-red-500 hover:bg-purple-600 text-white font-bold py-2 px-4 rounded-lg ml-2\">\n          <i class=\"mdi mdi-instagram\"></i>\n        </a>\n\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport markdownParser from '@nuxt/content/transformers/markdown'\n\nconst post = ref({\n  title: '',\n  date: '',\n  content: '',\n  author: '',\n  createdAt: ''\n});\nconst config = useRuntimeConfig();\nconst route = useRoute();\nconst url = config.public.baseUrl + route.fullPath;\nconst slug = route.params.slug;\nconst parsedMarkdown = ref('');\nconst router = useRouter();\n\n\nconst getPost = async () => {\n\n  const getPost: any = await $fetch('/api/post?method=slug&slug=' + slug);\n  if(getPost.body == null)\n  {\n    return router.push('/404');\n  }\n  post.value = getPost.body;\n  parsedMarkdown.value = await markdownParser.parse(null, getPost.body.content);\n  useHead({\n    title: post.value.title + \" - JUSTALINKO\"\n  });\n};\n\n\n\nconst shareIgStory = () => {\n  // copy link to clipboard\n  navigator.clipboard.writeText(url);\n  alert('Link copied to clipboard');\n  return window.location.href = 'https://www.instagram.com/stories/create';\n\n};\nonMounted(async () => {\n  await getPost();\n});\n\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAM,WAAW,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AACvB,SAAS,OAAO,CAAC,MAAM,QAAQ;AACpD,OAAK,GAAG,IAAI,OAAO,IAAI,OAAO,IAAI,SAAS,CAAC,CAAC;AAC7C,SAAO;AACT,GAAG,CAAE,CAAA;;;;;AC4CL,UAAM,OAAO,IAAI;AAAA,MACf,OAAO;AAAA,MACP,MAAM;AAAA,MACN,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,WAAW;AAAA,IAAA,CACZ;AACD,UAAM,SAAS;AACf,UAAM,QAAQ;AACd,UAAM,MAAM,OAAO,OAAO,UAAU,MAAM;AAC7B,UAAM,OAAO;AACpB,UAAA,iBAAiB,IAAI,EAAE;AACd,cAAU;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}