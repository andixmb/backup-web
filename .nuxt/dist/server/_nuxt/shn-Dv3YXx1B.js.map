{"version":3,"file":"shn-Dv3YXx1B.js","sources":["../../../../virtual:public?%2Fshn.png","../../../../pages/shn.vue"],"sourcesContent":["import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/shn.png\")","<template>\n    <div>\n        <section class=\"p-5\">\n            <h2 class=\"text-black text-2xl mx-1 font-extrabold  relative inline-block stroke-current\">#️⃣ SHN-AI <svg\n                    class=\"absolute-bottom-0.5 w-full max-h-1.5\" viewBox=\"0 0 55 5\" xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"none\">\n                    <path d=\"M0.652466 4.00002C15.8925 2.66668 48.0351 0.400018 54.6853 2.00002\" strokeWidth=\"2\"></path>\n                </svg></h2>\n\n            <div class=\"flex-1 p:2 sm:p-6 justify-between flex flex-col h-screen\">\n                <div class=\"flex sm:items-center justify-between py-3 border-b-2 border-black\">\n                    <div class=\"relative flex items-center space-x-4\">\n                        <div class=\"relative\">\n                            <span class=\"absolute text-green-500 right-0 bottom-0\">\n                                <svg width=\"20\" height=\"20\">\n                                    <circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"currentColor\"></circle>\n                                </svg>\n                            </span>\n                            <img src=\"/shn.png\"\n                                alt=\"\" class=\"w-10 sm:w-16 h-10 sm:h-16 rounded-full\">\n                        </div>\n                        <div class=\"flex flex-col leading-tight\">\n                            <div class=\"text-2xl mt-1 flex items-center\">\n                                <span class=\"text-gray-700 mr-3\">0xandixmb-AI CHATBOT</span>\n                            </div>\n                            <span class=\"text-lg text-gray-600\">Your Alternative friends</span>\n                        </div>\n                    </div>\n\n                </div>\n                <div id=\"messages\"\n                    class=\"flex flex-col space-y-4 p-3 overflow-y-auto scrollbar-thumb-blue scrollbar-thumb-rounded scrollbar-track-blue-lighter scrollbar-w-2 scrolling-touch\">\n                    <div class=\"chat-message\">\n                        <div class=\"flex items-end justify-end\">\n                            <div class=\"flex flex-col space-y-2 text-xs max-w-xs mx-2 order-1 items-end\">\n                                <div><span\n                                        class=\"px-4 py-2 rounded-lg inline-block rounded-br-none bg-black text-white \">{{\n                                        command }}</span></div>\n                            </div>\n                            <img src=\"https://ui-avatars.com/api/?size=128&name=Justalinko&background=random&color=fff&rounded=true&bold=true\"\n                                alt=\"My profile\" class=\"w-6 h-6 rounded-full order-2\">\n                        </div>\n                    </div>\n                    <div v-if=\"aiResponseStream.length > 0\">\n                        <div v-for=\"(res,index) in aiResponseStream\" :key=\"index\" class=\"mb-2\">\n                            <SHNChat :aiResponse=\"res\" />\n                        </div>\n                    </div>\n                    <div v-else>\n                        <SHNChat :aiResponse=\"aiResponse\" />\n                    </div>\n\n                </div>\n                <div class=\"border-t-2 border-gray-200 px-4 pt-4 mb-2 sm:mb-0\">\n                    <div class=\"relative flex\">\n\n                        <input type=\"text\" placeholder=\"Write your message!\"\n                            class=\"w-full focus:outline-none focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-12 bg-gray-200  py-3 border-2 border-black\"\n                            v-model=\"command\">\n                        <div class=\"absolute right-0 items-center inset-y-0 \">\n\n                            <button type=\"button\"\n                                class=\"inline-flex items-center justify-center px-2 py-2 transition duration-500 ease-in-out text-white bg-black hover:bg-gray-500 focus:outline-none\"\n                                @click=\"sendCommand\">\n                                <span class=\"font-bold\" v-if=\"!replyIng\">Send</span>\n                                <span class=\"font-bold\" v-else>Replying...</span>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\"\n                                    class=\"h-6 w-6 ml-2 transform rotate-90\">\n                                    <path\n                                        d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\">\n                                    </path>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </section>\n    </div>\n</template>\n\n<style>\n.scrollbar-w-2::-webkit-scrollbar {\n    width: 0.25rem;\n    height: 0.25rem;\n}\n\n.scrollbar-track-blue-lighter::-webkit-scrollbar-track {\n    --bg-opacity: 1;\n    background-color: #f7fafc;\n    background-color: rgba(247, 250, 252, var(--bg-opacity));\n}\n\n.scrollbar-thumb-blue::-webkit-scrollbar-thumb {\n    --bg-opacity: 1;\n    background-color: #edf2f7;\n    background-color: rgba(237, 242, 247, var(--bg-opacity));\n}\n\n.scrollbar-thumb-rounded::-webkit-scrollbar-thumb {\n    border-radius: 0.25rem;\n}\n</style>\n\n<script lang=\"ts\" setup>\nuseHead({\n    title: \"SHN-AI - JUSTALINKO\"\n});\n\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\nconst command = ref('Hello !');\nconst aiResponse = ref('Hello, can i help you today?');\nconst aiResponseStream = ref([]);\nconst replyIng = ref(false);\n\nconst sendCommand = async () => {\n    replyIng.value = true;\n    let GEMINI_API = 'AIzaSyCORWk7gFe9EdttBMNCVaLcQRU0F5du3O8';\n\n\n    // Access your API key as an environment variable (see \"Set up your API key\" above)\n    const genAI = new GoogleGenerativeAI(GEMINI_API);\n\n    // ...\n\n    // The Gemini 1.5 models are versatile and work with both text-only and multimodal prompts\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\n\n\n    // const result = await model.generateContent(command);\n    // const response = await result.response;\n    //const text = response.text();\n\n    const result = await model.generateContentStream(command.value);\n\n    let text = \"\";\n    aiResponse.value = \"\";\n    aiResponseStream.value = [];\n    for await (const chunk of result.stream) {\n        const chunkText: any = chunk.text();\n        text += chunkText;\n        aiResponse.value += chunkText;\n        aiResponseStream.value.push(chunkText);\n    }\n    console.log(text);\n    replyIng.value = false;\n\n};\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAuD,MAAe,aAAA,gBAAgB,UAAU;;;;;;;;;;;;;;;;;;;;;AC2GxF,YAAA;AAAA,MACJ,OAAO;AAAA,IAAA,CACV;AAGK,UAAA,UAAU,IAAI,SAAS;AACvB,UAAA,aAAa,IAAI,8BAA8B;AAC/C,UAAA,mBAAmB,IAAI,CAAA,CAAE;AACzB,UAAA,WAAW,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}